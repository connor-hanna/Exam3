setwd("C:\Users\Connor\Documents\School\2019-2020\Public Policy\Final Paper Data\electioncost")
setwd("C:/Users/Connor/Documents/School/2019-2020/Public Policy/Final Paper Data/electioncost")
setwd("C:/Users/Connor/Documents/School/2019-2020/Public Policy/Final Paper Data/electioncost")
rm(list=ls())
setwd("C:/Users/Connor/Documents/School/2019-2020/Public Policy/Final Paper Data/electioncost")
rm(list=ls())
setwd("C:/Users/Connor/Documents/School/2019-2020/Public Policy/Final Paper Data/electioncost")
install.packages(c("devtools", "geosphere", "ggrepel", "googlesheets4", "Imap", "mapview", "raster", "rgeos", "rnaturalearth", "rnaturalearthdata", "sf", "sp", "varhandle"))
install.packages(c("devtools", "leaflet", "leaflet.extras", "sf", "shiny", "shinydashboard", "shinyjs", "shinyWidgets", "V8", "viridis"))
library(rio)
library(tidyverse)
library(googlesheets4)
library(labelled)
library(data.table)
library(varhandle)
library(ggrepel)
library(geosphere)
library(rgeos)
library(mapview)
library(rnaturalearth)
library(rnaturalearthdata)
library(devtools)
library(rnaturalearthhires) # devtools::install_github("ropensci/rnaturalearthhires")
library(raster)
library(sp)
library(sf)
library(Imap) # nice mapping/color functions
library(tidyverse)
library(googlesheets4)
library(labelled)
library(data.table)
library(dplyr)
library(rio)
library(sf)
library(shiny)
library(leaflet)
library(viridis)
library(devtools)
library(shinydashboard) #
library(V8) #
library(shinyjs) #
library(RColorBrewer)
library(readr)
library(tidyr)
library(leaflet.extras) #
library(htmltools)
library(shinyWidgets) #
library(ggplot2)
library(rio)
library(tidyverse)
library(googlesheets4)
library(labelled)
library(data.table)
library(varhandle)
library(ggrepel)
library(geosphere)
library(rgeos)
library(mapview)
library(rnaturalearth)
library(rnaturalearthdata)
library(devtools)
library(rnaturalearthhires) # devtools::install_github("ropensci/rnaturalearthhires")
library(raster)
library(sp)
library(sf)
library(Imap) # nice mapping/color functions
devtools::install_github("ropensci/rnaturalearthhires")
library(dplyr)
library(rio)
library(sf)
library(shiny)
library(leaflet)
library(viridis)
library(devtools)
library(shinydashboard) #
library(V8) #
library(shinyjs) #
library(RColorBrewer)
library(readr)
library(tidyr)
library(leaflet.extras) #
library(htmltools)
library(shinyWidgets) #
library(ggplot2)
library(tidycensus)
help(tidycensus)
install.packages("devtools")
devtools::install_github("username/packagename")
install.packages(rtools)
install.packages(Rtools)
install.packages("Rtools")
inequality_data <- read_excel("~/School/2020 SS/Data Science/Exam 2/inequality.xlsx")
View(inequality)
knitr::opts_chunk$set(echo = TRUE)
inequality_data <- read_excel("~/School/2020 SS/Data Science/Exam 2/inequality.xlsx")
View(inequality_data)
library(readxl)
inequality <- read_excel("2020 SS/Data Science/Exam 2/inequality.xlsx")
View(inequality)
inequality_data_scandi <- subset(inequality_data, country == "Denmark" | country == "Sweden", select = c(country, inequality_gini))
View(inequality_data_scandi)
inequality_data <- read_excel("2020 SS/Data Science/Exam 2/inequality.xlsx")
inequality_data_scandi <- subset(inequality_data, country == "Denmark" | country == "Sweden", select = c(country, inequality_gini))
View(inequality_data_scandi)
inequality_data_brazi <- subset(inequality_data, country == "Brazil", select = c(country, inequality_gini))
View(inequality_data_brazi)
accent.remove <- iconv(inequality_data$country, from = "Ãº", to = "u", sub = NA)
sapply(inequality_data$country, accent.remove)
head(inequality_data)
sort_by_gini <- order(inequality_data$inequality_gini, decreasing = TRUE)
inequality_data[sort_by_gini, ]
mean(inequality_data$inequality_gini)
mean_gini <- mean(inequality_data$inequality_gini)
inequality_data$high_inequality <- ifelse(inequality_data$inequality_gini >= mean_gini, 1, 0)
inequality_data$low_inequality <- ifelse(inequality_data$inequality_gini < mean_gini, 1, 0)
table(inequality_data$high_inequality, inequality_data$low_inequality)
names_list <- c("Bill and Melinda Gates Foundation", "The World Bank", "The African Development Bank")
innovating_for_development <- c(1, 1, 1)
looper_frame <- data.frame(names_list, innovating_for_development)
for (val in looper_frame) {
if(innovating_for_development == 1)
print(names_list)
}
library(WDI)
WDI_cereal <- WDI(country = "all", indicator = "AG.YLD.CREL.KG", start = 2015, end = 2015, extra = FALSE, cache = NULL)
merged_df <- inequality_data
na.omit(merged_df)
data_greater_30 <- filter(merged_df, inequality_gini > 30)
data_greater_30 <- filter(merged_df, merged_df$inequality_gini > 30)
help("filter")
knitr::opts_chunk$set(echo = TRUE)
html_nodes(hot100exam)
install.packages(rvest)
install.packages("rvest")
hot100exam <- readLines("https://www.billboard.com/charts/hot-100")
library(rvest)
html_nodes(hot100exam)
hot100exam <- read_html("https://www.billboard.com/charts/hot-100")
library(rvest)
html_nodes(hot100exam)
library(rvest)
html_nodes(hot100exam, css = "all")
install.packages("Chromote")
hot100exam <- readLines("https://www.billboard.com/charts/hot-100")
library(rvest)
html_nodes(hot100exam, css = "all")
library(rvest)
html_nodes(hot100exam)
?readLines
?read_html
library(rvest)
hot100exam <- readLines("https://www.billboard.com/charts/hot-100")
hot100exam <- read_html(hot100exam)
library(rvest)
hot100exam <- readLines("https://www.billboard.com/charts/hot-100")
library(rvest)
html_nodes(hot100exam)
knit_with_parameters('~/School/2020 SS/Data Science/Exam 3/Exam_3.Rmd', encoding = 'UTF-8')
setwd("~/School/2020 SS/Data Science/Exam 3")
